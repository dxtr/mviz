name: build

on:
  push:
    branches: [trunk]
  pull_request:
    branches: [trunk]

permissions:
  contents: read

jobs:
  build:
    name: GHC ${{ matrix.ghc-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        ghc-version: ['9.6']

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      
      - name: Install OS dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential libsdl2-dev libjack-dev libglew-dev libfftw3-dev
      
      - name: Set up GHC ${{ matrix.ghc-version }}
        uses: haskell-actions/setup@v2
        id: setup
        with:
          ghc-version: ${{ matrix.ghc-version }}
          cabal-version: 'latest'
          cabal-update: true

      - name: Check cabal file
        run: cabal check
      
      - name: Configure
        run: |
          cabal configure --enable-tests --enable-benchmarks --disable-documentation
          cabal build --dry-run

      - name: Restore cached dependencies
        uses: actions/cache/restore@v3
        id: cache
        env:
          key: ${{ runner.os }}-ghc-${{ steps.setup.outputs.ghc-version }}-cabal-${{ steps.setup.outputs.cabal-version }}
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ env.key }}-plan-${{ hashFiles('**/plan.json') }}
          restore-keys: ${{ env.key }}-

      - name: Install Haskell dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: cabal build all --only-dependencies --enable-tests --enable-benchmarks

      - name: Save cached dependencies
        uses: actions/cache/save@v3
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          path: ${{ steps.setup.outputs.cabal-store }}
          key: ${{ steps.cache.outputs.cache-primary-key }}

      - name: Build
        run: cabal build --enable-tests --enable-benchmarks all
      
      - name: Run tests
        run: cabal test all
